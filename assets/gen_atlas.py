#!/usr/bin/env python3

import sys
import json
from typing import Optional, Any

import click
from PIL import Image, ImageDraw


def gen_py_string(rects):
    TEMPLATE = r"""# This file is generated by [gen_atlas.py]

import enum

TEX_WIDTH = WW
TEX_HEIGHT = HH
RECTS = [
    #   x,     y,     w,     h
    BUFFER
]


class Sprite(enum.Enum):
    ENUM"""

    with open(sys.argv[1]) as f:
        j = json.load(f)
    frames: dict = j["frames"]

    # size
    width = j["meta"]["size"]["w"]
    height = j["meta"]["size"]["h"]

    # buffer
    buffer = [rect(image, width, height) for image in frames.values()]
    buffer_sep = "\n" + " " * 4  # one tabs
    buffer_str = buffer_sep.join(buffer)

    # enum
    enum_sep = "\n" + " " * 4  # one tab
    enum_str = enum_sep.join(
        f"{python_enum_name(name)} = {i}" for (i, name) in enumerate(frames)
    )

    rust = (
        TEMPLATE.replace("BUFFER", buffer_str)
        .replace("ENUM", enum_str)
        .replace("WW", str(width))
        .replace("HH", str(height))
    )

    print(rust)


def rect(image, w, h):
    frame = image["frame"]
    r = [frame[x] for i, x in enumerate("x y w h".split())]
    return ("{:5}, " * 4).format(*r)


def python_enum_name(name: str):
    name = name.partition(".")[0].upper()

    return name


def extruded(im: Image.Image, ex: int):
    if ex <= 0:
        return im

    w, h = im.size
    new = im.crop((-ex, -ex, w + ex, h + ex))
    nw, nh = new.size

    # Extend the side
    left = im.crop((0, 0, 1, h))
    right = im.crop((w - 1, 0, w, h))
    top = im.crop((0, 0, w, 1))
    bottom = im.crop((0, h - 1, w, h))
    for d in range(ex):
        new.paste(left, (d, ex, d + 1, ex + h))
        new.paste(right, (nw - d - 1, ex, nw - d, ex + h))
        new.paste(top, (ex, d, ex + w, d + 1))
        new.paste(bottom, (ex, nh - d - 1, ex + w, nh - d))

    # Extend the corners
    draw = ImageDraw.Draw(new)
    draw.rectangle((0, 0, ex, ex), im.getpixel((0, 0)))  # top-left
    draw.rectangle((nw - ex, 0, nw, ex), im.getpixel((w - 1, 0)))  # top-right
    draw.rectangle((0, nh - ex, ex, nh), im.getpixel((0, h - 1)))  # bottom-left
    draw.rectangle((nw - ex, nh - ex, nw, nh), im.getpixel((w - 1, h - 1)))  # bottom-right

    return new


@click.command()
@click.option('--extrude', default=0, help="Expend the imagepast the border of N pixels")
@click.argument("files", nargs=-1)
def main(files, extrude):
    images = [Image.open(file) for file in files]
    print(*images, sep='\n')

    if extrude:
        images = [extruded(im, extrude) for im in images]

    print()
    print(*images, sep='\n')
    images[-1].save("test.png")

if __name__ == "__main__":
    main()
